---
openapi: 3.0.3
info:
  title: LU-Explorer API
  version: "0.1"
tags:
  - name: db
    description: queries on database tables
  - name: locale
    description: queries the translations
  - name: rev
    description: (reverse) queries using DB index structures
components:
  securitySchemes:
    basic_auth:
      type: http
      scheme: basic
  schemas:
    NumArray:
      type: array
      items: { type: number }
    StringArray:
      type: array
      items: { type: string }
    ObjectArray:
      type: array
      items: { type: object }
    ActivityRev:
      type: object
      properties:
        rebuild: { $ref: "#/components/schemas/NumArray" }
    Behavior:
      type: object
      properties:
        skill: { $ref: "#/components/schemas/NumArray" }
        uses: { $ref: "#/components/schemas/NumArray" }
        used_by: { $ref: "#/components/schemas/NumArray" }
        _embedded:
          type: object
          properties:
            behaviorID: { type: number }
            templateID: { type: number }
            effectID: { type: number }
            effectHandle: { type: number }
            parameters: { type: object }
    TableDef:
      type: object
      properties:
        name:
          type: string
        columns:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              data_type:
                type: string
    LocaleNode:
      type: object
      properties:
        value: { type: string }
        int_keys: { $ref: "#/components/schemas/NumArray" }
        str_keys: { $ref: "#/components/schemas/StringArray" }
    LootTable:
      type: array
      items:
        type: object
        properties:
          itemid: { type: number }
          LootTableIndex: { type: number }
          id: { type: number }
          MissionDrop: { type: boolean }
          sortPriority: { type: number }
    ErrorModel:
      type: number
paths:
  "/v0/tables":
    get:
      tags:
        - db
      description: List all database table names
      responses:
        "200":
          description: The tables of the database
          content:
            application/json:
              schema: { $ref: "#/components/schemas/StringArray" }
        default:
          description: Unexpected error
          content:
            application/json:
              schema: { $ref: "#/components/schemas/ErrorModel" }
  "/v0/tables/{name}/def":
    get:
      tags:
        - db
      description: Show the definiton of a database table
      responses:
        "200":
          description: The request was successfull
          content:
            application/json:
              schema: { $ref: "#/components/schemas/TableDef" }
    parameters:
      - in: path
        required: true
        name: name
        schema: { type: string }
  "/v0/tables/{name}/{key}":
    get:
      tags:
        - db
      description: Show data for a key in a table
      responses:
        "200":
          description: The request was successfull
          content:
            application/json:
              schema: { $ref: "#/components/schemas/ObjectArray" }
    parameters:
      - in: path
        required: true
        name: name
        schema: { type: string }
      - in: path
        required: true
        name: key
        schema: { type: string }
  "/v0/locale/{path}":
    get:
      tags: [locale]
      description: Get a single locale node
      responses:
        "200":
          description: The request was successfull
          content:
            application/json:
              schema: { $ref: "#/components/schemas/LocaleNode" }
    parameters:
      - in: path
        required: true
        name: path
        schema: { type: string }
  "/v0/locale/{path}/$all":
    get:
      tags: [locale]
      description: Get a locale subtree
      responses:
        "200":
          description: The request was successfull
          content:
            application/json:
              schema:
                type: object
                properties: {}
    parameters:
      - in: path
        required: true
        name: path
        schema: { type: string }
  "/v0/rev":
    get:
      tags: [rev]
      description: List all supported reverse lookup scopes
      responses:
        "200":
          description: The request was successfull
          content:
            application/json:
              schema: { $ref: "#/components/schemas/StringArray" }
  "/v0/rev/activity/{id}":
    get:
      tags: [rev]
      description: Get data associated with an `ActivityID`
      responses:
        "200":
          description: The request was successfull
          content:
            application/json:
              schema: { $ref: "#/components/schemas/ActivityRev" }
    parameters:
      - in: path
        required: true
        name: id
        schema: { type: number }
  "/v0/rev/behaviors/{id}":
    get:
      tags: [rev]
      description: Get all data for a specific behavior ID
      responses:
        "200":
          description: The request was successfull
          content:
            application/json:
              schema: { $ref: "#/components/schemas/Behavior" }
    parameters:
      - in: path
        required: true
        name: id
        schema: { type: number }
  "/v0/rev/component_types":
    get:
      tags: [rev]
      description: List all component types in the database
      responses:
        "200":
          description: The request was successfull
          content:
            application/json:
              schema: { type: array, items: { type: string } }
  "/v0/rev/component_types/{type}":
    get:
      tags: [rev]
      description:
        List all component IDs and associated objects for a component type
        This is a reverse lookup of the `ComponentsRegistry` table
      responses:
        "200":
          description: The request was successfull
          content:
            application/json:
              schema: { type: array, items: { type: string } }
    parameters:
      - in: path
        required: true
        name: type
        schema: { type: number }
  "/v0/rev/component_types/{type}/{id}":
    get:
      tags: [rev]
      description:
        List all component IDs and associated objects for a component type
        This is a reverse lookup of the `ComponentsRegistry` table
      responses:
        "200":
          description: The request was successfull
          content:
            application/json:
              schema: { type: array, items: { type: string } }
    parameters:
      - in: path
        required: true
        name: type
        schema: { type: number }
      - in: path
        required: true
        name: id
        schema: { type: number }
  "/v0/rev/loot_table_index/{id}":
    get:
      tags: [rev]
      description: Get data from the `LootTable` by `Index`
      responses:
        "200":
          description: The request was successfull
          content:
            application/json:
              schema:
                type: object
                properties:
                  loot_table: { $ref: "#/components/schemas/LootTable" }
    parameters:
      - in: path
        required: true
        name: id
        schema: { type: number }
